<?php

namespace Anax\Models;

class Forecaster
{

    protected $latitude = "";
    protected $longitude = "";

    protected $temperature = ""; //celsius
    protected $feelsLike = ""; //also celsius
    protected $windSpeed = ""; //m/s
    protected $weatherMain = "";
    protected $weatherDesc = "";

    // ACTUAL USEFUL FUNCS

    public function getCurrentWeather($inputLat, $inputLong)
    {
        $this->latitude = $inputLat;
        $this->longitude = $inputLong;

        $configFile = file_get_contents("../config/config.json");
        $configFile = json_decode($configFile);
        $apiKey = $configFile->openweathermap->apikey;

        $url = "https://api.openweathermap.org/data/2.5/onecall?"
        . "lat=" . $inputLat . "&lon=" . $inputLong
        . "&exclude=daily,minutely,hourly,alerts&"
        . "appid=" . $apiKey
        . "&units=metric&lang=se";

        // Send request
        $json = @file_get_contents($url);
        $json = json_decode($json);
        if (isset($json)) {
            // Handle response
            $this->temperature = $json->current->temp;
            $this->feelsLike = $json->current->feels_like;
            $this->windSpeed = $json->current->wind_speed;

            $this->weatherMain = $json->current->weather[0]->main;
            $this->weatherDesc = $json->current->weather[0]->description;
        }
    }

    // GET FUNCS

    public function getLatLong()
    {
        if (isset($this->latitude) && isset($this->longitude)) {
            $returnArray["lat"] = $this->latitude;
            $returnArray["long"] = $this->longitude;
            return $returnArray;
        }
        return false;
    }
    public function getWeather()
    {
        if (isset($this->weatherMain)) {
            $returnArray["temperature"] = $this->temperature;
            $returnArray["feelsLike"] = $this->feelsLike;
            $returnArray["windSpeed"] = $this->windSpeed;
            $returnArray["weatherMain"] = $this->weatherMain;
            $returnArray["weatherDesc"] = $this->weatherDesc;
            return $returnArray;
        }
        return false;
    }

    public function buildWeatherHtml()
    {
        if (isset($this->weatherMain) && $this->weatherMain != "") {
            $lat = $this->latitude;
            $long = $this->longitude;
            $tmpr = $this->temperature;
            $flike = $this->feelsLike;
            $wSpeed = $this->windSpeed;
            $wMain = $this->weatherMain;
            $wDesc = $this->weatherDesc;

            $returnHtml = "
            <h5>Vädret just nu</h5>
            <p>
            Vädret vid koordinaterna (" . $lat . ", " . $long . ")
            är <br><br><b>" . $wMain . "</b> (<b>" . $wDesc . "</b>)
            </p>
            <br>
            <p>
            Temperaturen är <b>" . $tmpr ."°C</b>, och känns som <b>" . $flike . "°C</b>.
            </p>
            <p>
            Vindar blåser i upp emot <b>" . $wSpeed . "m/s</b>.</p>

            <h5>Vädret kommande vecka</h5>
            --<a href='https://schibsted.com/blog/php-perform-requests-in-parallel/'>todo</a>

            <h5>Vädret tidigare 30 dagar</h5>
            --<a href='https://schibsted.com/blog/php-perform-requests-in-parallel/'>todo</a>
            ";

            return $returnHtml;
        }
        return false;
    }
}
